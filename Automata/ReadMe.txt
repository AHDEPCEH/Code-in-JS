Мельниченко Андрей КНМО-101
Постановка задачи:
Дана строка S длины n и строка Т длины m; символы строк нумеруются начиная с 1. Требуется найти все вхождения строки Т в строку S.
О конечном детерминированном автомате:
алгоритм, который за счет однократной предварительной обработки шаблона Т потом осуществляет поиск за время O(n), при этом каждый символ строки S просматривается ровно один раз. Алгоритм оперирует такими понятиями,
как «префикс-функция», «таблица переходов», «максимальный сдвиг». 
По шаблону создаётся сценарий действий при встречи очередного символа из строки, который есть в шаблоне.
Пример:
У нас есть шаблон: ananas, если проходя по строке S, мы встретим букву a, счётчик совпавших букв приравняем к 1, в противном случае к 0.
Далее если встретим n, то приравняем уже к 2, или если встретим a, то к 1, иначе к 0.
На следующем шаге, если встретим a, то приравняем к 3, иначе к 0, и так далее. 
Не стоит забывать, что строка ana является подстрокой ananan? поэтому количество совпаших букв будет равняться 2, а не 0.
Таблица:
+------+---+---+---+
|Шаг:  | a | n | s |
+------+---+---+---+  
|0     | 1 | 0 | 0 |
+------+---+---+---+
|1     | 1 | 2 | 0 |
+------+---+---+---+
|2     | 3 | 0 | 0 |
+------+---+---+---+
|3     | 1 | 4 | 0 |
+------+---+---+---+
|4     | 5 | 0 | 0 |
+------+---+---+---+
|5     | 1 | 2 | 6 |
+------+---+---+---+
|6     | 1 | 0 | 0 |
+------+---+---+---+
Итог:
Программа ищет все вхождения шаблона в строку за сложность O(n), где n - длинна строки.
А также создаёт подобную таблицу действий, в худшем случае за сложность O(m^2), где m - длина шаблона. 